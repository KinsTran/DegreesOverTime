g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 0.5,
subunitwidth = 0.5
)
plot_geo(shooting.2016, lat = ~lat, lon = ~lng) %>%
add_markers(
text = ~paste(date, city, state, paste("Injured:", injured),paste("Killed:", killed), sep = "<br />"),
color = ~injured, symbol = I("square"), size = I(8), hoverinfo = "text"
) %>%
colorbar(title = "Amount of people injured") %>%
layout(
title = 'Shootings in 2016', geo = g
)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = FALSE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 0.5,
subunitwidth = 0.5
)
plot_geo(shooting.2016, lat = ~lat, lon = ~lng) %>%
add_markers(
text = ~paste(date, city, state, paste("Injured:", injured),paste("Killed:", killed), sep = "<br />"),
color = ~injured, symbol = I("square"), size = I(8), hoverinfo = "text"
) %>%
colorbar(title = "Amount of people injured") %>%
layout(
title = 'Shootings in 2016', geo = g
)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 0.5,
subunitwidth = 0.5
)
plot_geo(shooting.2016, lat = ~lat, lon = ~lng) %>%
add_markers(
text = ~paste(date, city, state, paste("Injured:", injured),paste("Killed:", killed), sep = "<br />"),
color = ~injured, symbol = I("square"), size = I(8), hoverinfo = "text"
) %>%
colorbar(title = "Amount of people injured") %>%
layout(
title = 'Shootings in 2016', geo = g
)
plot_ly(joined.data.2, x = ~injured, y = ~killed,color = ~incidents,size = ~incidents, type = 'scatter', mode = 'markers',hoverinfo = 'text',
text = ~paste('City: ', city,
'</br> Injured: ', injured,
'</br> Killed: ', killed,
'</br> Total Incidents: ', incidents)) %>%
layout(title = 'Injured VS Killed in Each City')
first.five <- joined.data.2[1:5,]
View(first.five)
first.five <- joined.data.2[1:5,] %>% select(city)
View(first.five)
first.five <- joined.data.2[1:5,] %>% select(city)$city
list.five <- first.five$city
kable(joined.data.2)
#Description of a particular incident
#date and location, number of people injured and killed, link to at least one outside resourced
outside.source <- paste0("[article](","https://www.nytimes.com/2016/06/13/us/orlando-nightclub-shooting.html?_r=0", ")")
View(shooting.2016)
plot_ly(joined.data.2, x = ~incidents, y = ~injured,color = ~killed,size = ~killed, type = 'scatter', mode = 'markers',hoverinfo = 'text',
text = ~paste('City: ', city,
'</br> Injured: ', injured,
'</br> Killed: ', killed,
'</br> Total Incidents: ', incidents)) %>%
layout(title = 'Incidents and Injured in 2016')
shooting.2016$hover <- with(shooting.2016, paste(city, '<br>',state,'<br>',date,'<br>'))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(shooting.2016, lat=~lat,lon=~lng) %>%
add_trace(
z = ~injured, text = ~hover, locations = ~code,
color = ~injured, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(shooting.2016, lat=~lat,lon=~lng) %>%
add_trace(
z = ~injured, text = ~hover, locations = ~injured,
color = ~injured, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 1,
subunitwidth = 1
)
plot_geo(shooting.2016, lat = ~lat, lon = ~lng) %>%
add_markers(
text = ~paste(date, city, state, paste("Injured:", injured),paste("Killed:", killed), sep = "<br />"),
color = ~injured, symbol = I("square"), size = I(8), hoverinfo = "text"
) %>%
colorbar(title = "Amount of people injured") %>%
layout(
title = 'Shootings in 2016', geo = g
)
knitr::opts_chunk$set(echo = FALSE)
library("knitr")
library("httr")
library("jsonlite")
library("dplyr")
library("plotly")
library("ggplot2")
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 1,
subunitwidth = 1
)
plot_geo(shooting.2016, x = ~shooting.2016$lat, y = ~shooting.2016$lng) %>%
add_markers(
text = ~paste(date, city, state, paste("Injured:", injured),paste("Killed:", killed), sep = "<br />"),
color = ~injured, symbol = I("square"), size = I(8), hoverinfo = "text"
) %>%
colorbar(title = "Amount of people injured") %>%
layout(
title = 'Shootings in 2016', geo = g
)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray95")
)
plot_geo(shooting.2016, lat = ~lat, lon = ~lng) %>%
add_markers(
text = ~paste(date, city, state, paste("Injured:", injured),paste("Killed:", killed), sep = "<br />"),
color = ~injured, symbol = I("square"), size = I(8), hoverinfo = "text"
) %>%
colorbar(title = "Amount of people injured") %>%
layout(
title = 'Shootings in 2016', geo = g
)
knitr::opts_chunk$set(echo = FALSE)
library("knitr")
library("httr")
library("jsonlite")
library("dplyr")
library("plotly")
library("ggplot2")
shooting.2016 <- read.csv('./data/shootings-2016.csv',stringsAsFactors = FALSE)
amt.shooting <- nrow(shooting.2016)
amt.killed <- select(shooting.2016,killed) %>% sum()
affected <-  mutate(shooting.2016, combined = killed +injured) %>% filter(combined == max(combined))
affected.city = affected$city
affected.state = affected$state
affected.combined <- affected$combined
no.deaths <- filter(shooting.2016,killed == 0) %>% nrow()
no.death.percentage <- round((no.deaths / amt.shooting)*100, digits = 0)
by.city <- aggregate(x = shooting.2016,
by = list(unique.values = shooting.2016$city),
FUN = length)
revised <- select(by.city,city = unique.values,count = city) %>% arrange(desc(count))
revised.injured <- aggregate(shooting.2016$injured, by = list(city = shooting.2016$city),FUN = sum)
revised.killed <- aggregate(shooting.2016$killed, by = list(city = shooting.2016$city),FUN = sum)
joined.data <- left_join(revised, revised.injured, by = "city") %>% select(city = city, count = count, injured = x)
joined.data.2 <- left_join(joined.data, revised.killed, by = "city") %>% select(city = city, incidents = count, injured = injured,killed = x)
first.five <- joined.data.2[1:5,] %>% select(city)
list.five <- first.five$city
kable(joined.data.2)
#Description of a particular incident
#date and location, number of people injured and killed, link to at least one outside resourced
outside.source <- paste0("[article](","https://www.nytimes.com/2016/06/13/us/orlando-nightclub-shooting.html?_r=0", ")")
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray95")
)
plot_geo(shooting.2016, lat = ~lat, lon = ~lng) %>%
add_markers(
text = ~paste(date, city, state, paste("Injured:", injured),paste("Killed:", killed), sep = "<br />"),
color = ~injured, symbol = I("square"), size = I(8), hoverinfo = "text"
) %>%
colorbar(title = "Amount of people injured") %>%
layout(
title = 'Shootings in 2016', geo = g
)
plot_ly(joined.data.2, x = ~incidents, y = ~injured,color = ~killed,size = ~killed, type = 'scatter', mode = 'markers',hoverinfo = 'text',
text = ~paste('City: ', city,
'</br> Injured: ', injured,
'</br> Killed: ', killed,
'</br> Total Incidents: ', incidents)) %>%
layout(title = 'Incidents and Injured in 2016')
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray95")
)
plot_geo(shooting.2016, lat = ~lat, lon = ~lng) %>%
add_markers(
text = ~paste(date, city, state, paste("Injured:", injured),paste("Killed:", killed), sep = "<br />"),
color = ~injured, symbol = I("square"), size = I(8), hoverinfo = "text"
)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray95")
)
plot_geo(shooting.2016, lat = ~lat, lon = ~lng) %>%
add_markers(
text = ~paste(date, city, state, paste("Injured:", injured),paste("Killed:", killed), sep = "<br />"),
color = ~injured, symbol = I("square"), size = I(8), hoverinfo = "text"
)
knitr::opts_chunk$set(echo = FALSE)
library("knitr")
library("httr")
library("jsonlite")
library("dplyr")
library("plotly")
library("ggplot2")
g <- list(
scope = 'north america',
showland = TRUE,
landcolor = toRGB("grey83"),
subunitcolor = toRGB("white"),
countrycolor = toRGB("white"),
showlakes = TRUE,
lakecolor = toRGB("white"),
showsubunits = TRUE,
showcountries = TRUE,
resolution = 50,
projection = list(
type = 'conic conformal',
rotation = list(lon = -100)
),
lonaxis = list(
showgrid = TRUE,
gridwidth = 0.5,
range = c(-140, -55),
dtick = 5
),
lataxis = list(
showgrid = TRUE,
gridwidth = 0.5,
range = c(20, 60),
dtick = 5
)
)
p <- plot_geo(data = shooting.2016, lat = ~lat, lon = ~lng) %>%
add_markers(
text = ~paste(date, city, state, paste("Injured:", injured),paste("Killed:", killed), sep = "<br />"),
color = ~injured, symbol = I("square"), size = I(8), hoverinfo = "text"
) %>%
colorbar(title = "Amount of people injured") %>%
layout(
title = 'Shootings in 2016', geo = g
)
library(dplyr)
library(plotly)
df <- read.csv("data/Bach_Degrees.csv", header = TRUE, stringsAsFactors = FALSE)
BuildGraph.fields <- function() {
majors <- df[2:37, 'Field.of.study']
if(input$shelf == "1970") {
data <- df[2:37, 'X1970.71']
}else if(input$shelf == "1975") {
data <- df[2:37, 'X1975.76']
}else if(input$shelf == "1980") {
data <- df[2:37, 'X1980.81']
}else if(input$shelf == "1985") {
data <- df[2:37, 'X1985.86']
}else if(input$shelf == "1990") {
data <- df[2:37, 'X1990.91']
}else if(input$shelf == "1995") {
data <- df[2:37, 'X1995.96']
}else if(input$shelf == "2000") {
data <- df[2:37, 'X2000.01']
}else if(input$shelf == "2004") {
data <- df[2:37, 'X2004.05']
}else if(input$shelf == "2005") {
data <- df[2:37, 'X2005.06']
}else if(input$shelf == "2006") {
data <- df[2:37, 'X2006.07']
}else if(input$shelf == "2007") {
data <- df[2:37, 'X2007.08']
}else if(input$shelf == "2008") {
data <- df[2:37, 'X2008.09']
}else if(input$shelf == "2009") {
data <- df[2:37, 'X2009.10']
}else if(input$shelf == "2010") {
data <- df[2:37, 'X2010.11']
}else if(input$shelf == "2011") {
data <- df[2:37, 'X2011.12']
}else if(input$shelf == "2012") {
data <- df[2:37, 'X2012.13']
}else if(input$shelf == "2013") {
data <- df[2:37, 'X2013.14']
}else {
data <- df[2:37, 'X2014.15']
}
p <- plot_ly(
x = ~majors,
y = ~data,
type = "bar",
name = 'Popularity of Majors') %>%
layout(xaxis = list(title = 'Majors', tickangle = 45),
yaxis = list(title = 'Amount'),
barmode = 'group',
autosize = F,
width = 1500,
height = 700,
margin = list(b = 300, r = 200, t = 50))
return(p)
}
if(input$shelf == "1970") {
data <- df[2:37, 'X1970.71']
}else if(input$shelf == "1975") {
data <- df[2:37, 'X1975.76']
}else if(input$shelf == "1980") {
data <- df[2:37, 'X1980.81']
}else if(input$shelf == "1985") {
data <- df[2:37, 'X1985.86']
}else if(input$shelf == "1990") {
data <- df[2:37, 'X1990.91']
}else if(input$shelf == "1995") {
data <- df[2:37, 'X1995.96']
}else if(input$shelf == "2000") {
data <- df[2:37, 'X2000.01']
}else if(input$shelf == "2004") {
data <- df[2:37, 'X2004.05']
}else if(input$shelf == "2005") {
data <- df[2:37, 'X2005.06']
}else if(input$shelf == "2006") {
data <- df[2:37, 'X2006.07']
}else if(input$shelf == "2007") {
data <- df[2:37, 'X2007.08']
}else if(input$shelf == "2008") {
data <- df[2:37, 'X2008.09']
}else if(input$shelf == "2009") {
data <- df[2:37, 'X2009.10']
}else if(input$shelf == "2010") {
data <- df[2:37, 'X2010.11']
}else if(input$shelf == "2011") {
data <- df[2:37, 'X2011.12']
}else if(input$shelf == "2012") {
data <- df[2:37, 'X2012.13']
}else if(input$shelf == "2013") {
data <- df[2:37, 'X2013.14']
}else {
data <- df[2:37, 'X2014.15']
}
library(dplyr)
library(plotly)
df <- read.csv("data/Bach_Degrees.csv", header = TRUE, stringsAsFactors = FALSE)
BuildGraph.fields <- function() {
majors <- df[2:37, 'Field.of.study']
if(input$shelf == "1970") {
data <- df[2:37, 'X1970.71']
}else if(input$shelf == "1975") {
data <- df[2:37, 'X1975.76']
}else if(input$shelf == "1980") {
data <- df[2:37, 'X1980.81']
}else if(input$shelf == "1985") {
data <- df[2:37, 'X1985.86']
}else if(input$shelf == "1990") {
data <- df[2:37, 'X1990.91']
}else if(input$shelf == "1995") {
data <- df[2:37, 'X1995.96']
}else if(input$shelf == "2000") {
data <- df[2:37, 'X2000.01']
}else if(input$shelf == "2004") {
data <- df[2:37, 'X2004.05']
}else if(input$shelf == "2005") {
data <- df[2:37, 'X2005.06']
}else if(input$shelf == "2006") {
data <- df[2:37, 'X2006.07']
}else if(input$shelf == "2007") {
data <- df[2:37, 'X2007.08']
}else if(input$shelf == "2008") {
data <- df[2:37, 'X2008.09']
}else if(input$shelf == "2009") {
data <- df[2:37, 'X2009.10']
}else if(input$shelf == "2010") {
data <- df[2:37, 'X2010.11']
}else if(input$shelf == "2011") {
data <- df[2:37, 'X2011.12']
}else if(input$shelf == "2012") {
data <- df[2:37, 'X2012.13']
}else if(input$shelf == "2013") {
data <- df[2:37, 'X2013.14']
}else {
data <- df[2:37, 'X2014.15']
}
p <- plot_ly(
x = ~majors,
y = ~data,
type = "bar",
name = 'Popularity of Majors') %>%
layout(xaxis = list(title = 'Majors', tickangle = 45),
yaxis = list(title = 'Amount'),
barmode = 'group',
autosize = F,
width = 1500,
height = 700,
margin = list(b = 300, r = 200, t = 50))
return(p)
}
df <- read.csv("data/Bach_Degrees.csv", header = TRUE, stringsAsFactors = FALSE)
setwd("C:/Users/Calvin/Desktop/info201/assignments/DegreesOverTime")
library(dplyr)
library(plotly)
df <- read.csv("data/Bach_Degrees.csv", header = TRUE, stringsAsFactors = FALSE)
BuildGraph.fields <- function() {
majors <- df[2:37, 'Field.of.study']
if(input$shelf == "1970") {
data <- df[2:37, 'X1970.71']
}else if(input$shelf == "1975") {
data <- df[2:37, 'X1975.76']
}else if(input$shelf == "1980") {
data <- df[2:37, 'X1980.81']
}else if(input$shelf == "1985") {
data <- df[2:37, 'X1985.86']
}else if(input$shelf == "1990") {
data <- df[2:37, 'X1990.91']
}else if(input$shelf == "1995") {
data <- df[2:37, 'X1995.96']
}else if(input$shelf == "2000") {
data <- df[2:37, 'X2000.01']
}else if(input$shelf == "2004") {
data <- df[2:37, 'X2004.05']
}else if(input$shelf == "2005") {
data <- df[2:37, 'X2005.06']
}else if(input$shelf == "2006") {
data <- df[2:37, 'X2006.07']
}else if(input$shelf == "2007") {
data <- df[2:37, 'X2007.08']
}else if(input$shelf == "2008") {
data <- df[2:37, 'X2008.09']
}else if(input$shelf == "2009") {
data <- df[2:37, 'X2009.10']
}else if(input$shelf == "2010") {
data <- df[2:37, 'X2010.11']
}else if(input$shelf == "2011") {
data <- df[2:37, 'X2011.12']
}else if(input$shelf == "2012") {
data <- df[2:37, 'X2012.13']
}else if(input$shelf == "2013") {
data <- df[2:37, 'X2013.14']
}else {
data <- df[2:37, 'X2014.15']
}
p <- plot_ly(
x = ~majors,
y = ~data,
type = "bar",
name = 'Popularity of Majors') %>%
layout(xaxis = list(title = 'Majors', tickangle = 45),
yaxis = list(title = 'Amount'),
barmode = 'group',
autosize = F,
width = 1500,
height = 700,
margin = list(b = 300, r = 200, t = 50))
return(p)
}
View(df)
majors <- select(df, Field.of.Study, X1970.71)
majors <- select(df, Field.of.study, X1970.71)
View(majors)
shiny::runApp()
